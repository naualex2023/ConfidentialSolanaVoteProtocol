var pre_profile = { 'code':
{"source_file":"//use super::MAX_CANDIDATES; \nuse arcis_imports::*;\n//use borsh::{BorshDeserialize, BorshSerialize};\n\n// Импортируем константу из on-chain кода (нужно настроить пути в Cargo.toml)\n//pub const MAX_CANDIDATES: usize = 5;\n\n#[encrypted]\nmod circuits {\n    // Import the constant from parent module\n    //use super::MAX_CANDIDATES;\n    use arcis_imports::*;\n\n    const MAX_CANDIDATES: usize = 5; \n    //use arcis_imports::Public; \n    //use borsh::{BorshDeserialize, BorshSerialize};    \n    pub struct VoteStats {\n        candidate_counts: [u64; MAX_CANDIDATES],\n    }\n\n    /// Представляет сложный голос: индекс выбранного кандидата.\n    //#[derive(BorshSerialize, BorshDeserialize)]\n    pub struct UserVote {\n        candidate_index: u64, // Индекс кандидата (0, 1, ..., N-1)\n    }\n    /// Отслеживает зашифрованный счет голосов для MAX_CANDIDATES.\n    //#[derive(BorshSerialize, BorshDeserialize)]\n#[instruction]\npub fn init_vote_stats(mxe: Mxe) -> Enc<Mxe, VoteStats> {\n    // Инициализируем массив candidate_counts нулями\n    let vote_stats = VoteStats {\n        candidate_counts: [0; MAX_CANDIDATES],\n    };\n    \n    // Передаем инициализированную структуру в Arcium\n    mxe.from_arcis(vote_stats)\n}\n\n    /// Обрабатывает зашифрованный голос и обновляет текущее состояние.\n    #[instruction]\n    pub fn vote(\n        vote_ctxt: Enc<Shared, UserVote>,\n        vote_stats_ctxt: Enc<Mxe, VoteStats>,\n    ) -> Enc<Mxe, VoteStats> {\n        let user_vote = vote_ctxt.to_arcis();\n        let mut vote_stats = vote_stats_ctxt.to_arcis();\n        \n        let index = user_vote.candidate_index as usize;\n\n        // Конфиденциально инкрементируем счетчик по индексу.\n        // Проверка index < MAX_CANDIDATES внутри MPC гарантирует, что \n        // некорректный голос не сломает счетчик, но и не будет учтен.\n        if index < MAX_CANDIDATES {\n            vote_stats.candidate_counts[index] += 1;\n        }\n\n        vote_stats_ctxt.owner.from_arcis(vote_stats)\n    }\n\n    /// Раскрывает финальный результат: дешифрует все N счетчиков.\n    #[instruction]\n    pub fn reveal_result(\n        vote_stats_ctxt: Enc<Mxe, VoteStats>,\n    ) -> [u64; MAX_CANDIDATES] {\n        let vote_stats = vote_stats_ctxt.to_arcis();\n        \n        let mut public_results: [u64; MAX_CANDIDATES] = [0; MAX_CANDIDATES];\n        \n        for i in 0..MAX_CANDIDATES {\n            public_results[i] = vote_stats.candidate_counts[i];\n        }\n        \n        public_results.reveal()\n    }\n}","code":[{"code":"0","region":{"Known":[{"line":31,"column":27},{"line":31,"column":28}]}},{"code":"[0; MAX_CANDIDATES]","region":{"Known":[{"line":31,"column":26},{"line":31,"column":45}]}},{"code":"let vote_stats = VoteStats { candidate_counts : [0; MAX_CANDIDATES], };","region":{"Known":[{"line":30,"column":4},{"line":32,"column":6}]}},{"code":"vote_stats","region":{"Known":[{"line":35,"column":19},{"line":35,"column":29}]}},{"code":"self.nonce += 1;","region":"Unknown"},{"code":"self","region":"Unknown"},{"code":"a","region":"Unknown"},{"code":"a","region":"Unknown"},{"code":"self.from_arcis_inner(a)","region":"Unknown"},{"code":"a","region":"Unknown"},{"code":"let phantom = [a; 0];","region":"Unknown"},{"code":"data","region":"Unknown"},{"code":"phantom","region":"Unknown"},{"code":"let data = EncData { data, phantom };","region":"Unknown"},{"code":"owner","region":"Unknown"},{"code":"data","region":"Unknown"},{"code":"Self { owner, data }","region":"Unknown"},{"code":"Enc :: new_inner(self, a, self.from_arcis_inner(a))","region":"Unknown"},{"code":"mxe.from_arcis(vote_stats)","region":{"Known":[{"line":35,"column":4},{"line":35,"column":30}]}},{"code":"self.owner","region":"Unknown"},{"code":"self.data","region":"Unknown"},{"code":"Self :: __arcis_inner(self.owner, self.data)","region":"Unknown"},{"code":"let user_vote = vote_ctxt.to_arcis();","region":{"Known":[{"line":44,"column":8},{"line":44,"column":45}]}},{"code":"let mut vote_stats = vote_stats_ctxt.to_arcis();","region":{"Known":[{"line":45,"column":8},{"line":45,"column":56}]}},{"code":"let index = user_vote.candidate_index as usize;","region":{"Known":[{"line":47,"column":8},{"line":47,"column":55}]}},{"code":"index < MAX_CANDIDATES","region":{"Known":[{"line":52,"column":11},{"line":52,"column":33}]}},{"code":"index","region":{"Known":[{"line":53,"column":40},{"line":53,"column":45}]}},{"code":"vote_stats.candidate_counts [index] += 1;","region":{"Known":[{"line":53,"column":12},{"line":53,"column":52}]}},{"code":"if index < MAX_CANDIDATES { vote_stats.candidate_counts [index] += 1; }","region":{"Known":[{"line":52,"column":8},{"line":54,"column":9}]}},{"code":"vote_stats","region":{"Known":[{"line":56,"column":41},{"line":56,"column":51}]}},{"code":"vote_stats_ctxt.owner.from_arcis(vote_stats)","region":{"Known":[{"line":56,"column":8},{"line":56,"column":52}]}},{"code":"let vote_stats = vote_stats_ctxt.to_arcis();","region":{"Known":[{"line":64,"column":8},{"line":64,"column":52}]}},{"code":"0","region":{"Known":[{"line":66,"column":57},{"line":66,"column":58}]}},{"code":"let mut public_results : [u64; MAX_CANDIDATES] = [0; MAX_CANDIDATES];","region":{"Known":[{"line":66,"column":8},{"line":66,"column":76}]}},{"code":"self.0","region":"Unknown"},{"code":"self.1 - 1","region":"Unknown"},{"code":"start","region":"Unknown"},{"code":"end","region":"Unknown"},{"code":"false","region":"Unknown"},{"code":"InclusiveRangeIterator { start, end, order_is_flipped : false }","region":"Unknown"},{"code":"InclusiveRangeIterator :: new(self.0, self.1 - 1)","region":"Unknown"},{"code":"self","region":"Unknown"},{"code":"self.end - self.start + 1","region":"Unknown"},{"code":"0","region":"Unknown"},{"code":"#[arcis_circuit = \"max\"] fn max_circ < T > (a : T, b : T) -> T {}","region":"Unknown"},{"code":"self","region":"Unknown"},{"code":"other","region":"Unknown"},{"code":"max_circ(self, other)","region":"Unknown"},{"code":"(self.end - self.start + 1).max(0)","region":"Unknown"},{"code":"self.order_is_flipped","region":"Unknown"},{"code":"let res = self.start;","region":"Unknown"},{"code":"self.start += 1;","region":"Unknown"},{"code":"res","region":"Unknown"},{"code":"if self.order_is_flipped { let res = self.end; self.end -= 1; res } else\n{ let res = self.start; self.start += 1; res }","region":"Unknown"},{"code":"i","region":{"Known":[{"line":69,"column":27},{"line":69,"column":28}]}},{"code":"i","region":{"Known":[{"line":69,"column":60},{"line":69,"column":61}]}},{"code":"public_results [i] = vote_stats.candidate_counts [i];","region":{"Known":[{"line":69,"column":12},{"line":69,"column":63}]}},{"code":"for i in 0 .. MAX_CANDIDATES\n{ public_results [i] = vote_stats.candidate_counts [i]; }","region":{"Known":[{"line":68,"column":8},{"line":70,"column":9}]}},{"code":"public_results.reveal()","region":{"Known":[{"line":72,"column":8},{"line":72,"column":31}]}}]}
, 'instructions':
{"reveal_result":{"profilees":[{"code_idx":19,"before_size_id":0,"after_size_id":0},{"code_idx":20,"before_size_id":0,"after_size_id":1},{"code_idx":21,"before_size_id":0,"after_size_id":2},{"code_idx":31,"before_size_id":0,"after_size_id":2},{"code_idx":32,"before_size_id":2,"after_size_id":2},{"code_idx":33,"before_size_id":2,"after_size_id":2},{"code_idx":34,"before_size_id":2,"after_size_id":2},{"code_idx":35,"before_size_id":2,"after_size_id":3},{"code_idx":36,"before_size_id":3,"after_size_id":3},{"code_idx":37,"before_size_id":3,"after_size_id":3},{"code_idx":38,"before_size_id":3,"after_size_id":3},{"code_idx":39,"before_size_id":3,"after_size_id":3},{"code_idx":40,"before_size_id":2,"after_size_id":3},{"code_idx":41,"before_size_id":3,"after_size_id":3},{"code_idx":42,"before_size_id":3,"after_size_id":4},{"code_idx":43,"before_size_id":4,"after_size_id":4},{"code_idx":44,"before_size_id":4,"after_size_id":4},{"code_idx":45,"before_size_id":4,"after_size_id":4},{"code_idx":46,"before_size_id":4,"after_size_id":4},{"code_idx":47,"before_size_id":4,"after_size_id":5},{"code_idx":48,"before_size_id":3,"after_size_id":5},{"code_idx":49,"before_size_id":5,"after_size_id":6},{"code_idx":50,"before_size_id":6,"after_size_id":6},{"code_idx":51,"before_size_id":6,"after_size_id":7},{"code_idx":52,"before_size_id":7,"after_size_id":7},{"code_idx":53,"before_size_id":5,"after_size_id":7},{"code_idx":54,"before_size_id":7,"after_size_id":7},{"code_idx":55,"before_size_id":7,"after_size_id":7},{"code_idx":56,"before_size_id":7,"after_size_id":7},{"code_idx":49,"before_size_id":7,"after_size_id":7},{"code_idx":50,"before_size_id":7,"after_size_id":7},{"code_idx":51,"before_size_id":7,"after_size_id":8},{"code_idx":52,"before_size_id":8,"after_size_id":8},{"code_idx":53,"before_size_id":7,"after_size_id":8},{"code_idx":54,"before_size_id":8,"after_size_id":8},{"code_idx":55,"before_size_id":8,"after_size_id":8},{"code_idx":56,"before_size_id":8,"after_size_id":8},{"code_idx":49,"before_size_id":8,"after_size_id":8},{"code_idx":50,"before_size_id":8,"after_size_id":8},{"code_idx":51,"before_size_id":8,"after_size_id":9},{"code_idx":52,"before_size_id":9,"after_size_id":9},{"code_idx":53,"before_size_id":8,"after_size_id":9},{"code_idx":54,"before_size_id":9,"after_size_id":9},{"code_idx":55,"before_size_id":9,"after_size_id":9},{"code_idx":56,"before_size_id":9,"after_size_id":9},{"code_idx":49,"before_size_id":9,"after_size_id":9},{"code_idx":50,"before_size_id":9,"after_size_id":9},{"code_idx":51,"before_size_id":9,"after_size_id":10},{"code_idx":52,"before_size_id":10,"after_size_id":10},{"code_idx":53,"before_size_id":9,"after_size_id":10},{"code_idx":54,"before_size_id":10,"after_size_id":10},{"code_idx":55,"before_size_id":10,"after_size_id":10},{"code_idx":56,"before_size_id":10,"after_size_id":10},{"code_idx":49,"before_size_id":10,"after_size_id":10},{"code_idx":50,"before_size_id":10,"after_size_id":10},{"code_idx":51,"before_size_id":10,"after_size_id":11},{"code_idx":52,"before_size_id":11,"after_size_id":11},{"code_idx":53,"before_size_id":10,"after_size_id":11},{"code_idx":54,"before_size_id":11,"after_size_id":11},{"code_idx":55,"before_size_id":11,"after_size_id":11},{"code_idx":56,"before_size_id":11,"after_size_id":11},{"code_idx":57,"before_size_id":2,"after_size_id":11},{"code_idx":58,"before_size_id":11,"after_size_id":12}]},"vote":{"profilees":[{"code_idx":19,"before_size_id":0,"after_size_id":0},{"code_idx":20,"before_size_id":0,"after_size_id":1},{"code_idx":21,"before_size_id":0,"after_size_id":2},{"code_idx":22,"before_size_id":0,"after_size_id":2},{"code_idx":19,"before_size_id":2,"after_size_id":2},{"code_idx":20,"before_size_id":2,"after_size_id":2},{"code_idx":21,"before_size_id":2,"after_size_id":3},{"code_idx":23,"before_size_id":2,"after_size_id":3},{"code_idx":24,"before_size_id":3,"after_size_id":3},{"code_idx":25,"before_size_id":3,"after_size_id":4},{"code_idx":26,"before_size_id":4,"after_size_id":4},{"code_idx":27,"before_size_id":4,"after_size_id":5},{"code_idx":28,"before_size_id":3,"after_size_id":6},{"code_idx":29,"before_size_id":6,"after_size_id":6},{"code_idx":4,"before_size_id":6,"after_size_id":7},{"code_idx":5,"before_size_id":7,"after_size_id":7},{"code_idx":6,"before_size_id":7,"after_size_id":7},{"code_idx":7,"before_size_id":7,"after_size_id":7},{"code_idx":8,"before_size_id":7,"after_size_id":8},{"code_idx":9,"before_size_id":8,"after_size_id":8},{"code_idx":10,"before_size_id":8,"after_size_id":8},{"code_idx":11,"before_size_id":8,"after_size_id":8},{"code_idx":12,"before_size_id":8,"after_size_id":8},{"code_idx":13,"before_size_id":8,"after_size_id":8},{"code_idx":14,"before_size_id":8,"after_size_id":8},{"code_idx":15,"before_size_id":8,"after_size_id":8},{"code_idx":16,"before_size_id":8,"after_size_id":8},{"code_idx":17,"before_size_id":7,"after_size_id":8},{"code_idx":30,"before_size_id":6,"after_size_id":8}]},"init_vote_stats":{"profilees":[{"code_idx":0,"before_size_id":0,"after_size_id":0},{"code_idx":1,"before_size_id":0,"after_size_id":0},{"code_idx":2,"before_size_id":0,"after_size_id":0},{"code_idx":3,"before_size_id":0,"after_size_id":0},{"code_idx":4,"before_size_id":0,"after_size_id":1},{"code_idx":5,"before_size_id":1,"after_size_id":1},{"code_idx":6,"before_size_id":1,"after_size_id":1},{"code_idx":7,"before_size_id":1,"after_size_id":1},{"code_idx":8,"before_size_id":1,"after_size_id":2},{"code_idx":9,"before_size_id":2,"after_size_id":2},{"code_idx":10,"before_size_id":2,"after_size_id":2},{"code_idx":11,"before_size_id":2,"after_size_id":2},{"code_idx":12,"before_size_id":2,"after_size_id":2},{"code_idx":13,"before_size_id":2,"after_size_id":2},{"code_idx":14,"before_size_id":2,"after_size_id":2},{"code_idx":15,"before_size_id":2,"after_size_id":2},{"code_idx":16,"before_size_id":2,"after_size_id":2},{"code_idx":17,"before_size_id":1,"after_size_id":2},{"code_idx":18,"before_size_id":0,"after_size_id":2}]}}
, 'instruction_locations':
{"init_vote_stats":{"Known":[{"line":27,"column":0},{"line":27,"column":14}]},"vote":{"Known":[{"line":39,"column":4},{"line":39,"column":18}]},"reveal_result":{"Known":[{"line":60,"column":4},{"line":60,"column":18}]}}
};
